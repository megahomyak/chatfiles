BEWARE: the author is currently very tired and can't write a good README given the current rapid changes; please, contact the author in order to get an explanation of all this crap

This is a simple implementation of a chat server that employs chatfiles both for client-side and server-side storage.

Before I begin: a "footer" is a special line put at the end of a message, like this:

my message goes here
and here
\information about who sent this, when, etc.

There are two parties in this exchange: a central server and a client. Clients are supposed to trust the server in everything, but the server is not supposed to trust any clients, nor are the clients supposed to trust each other. The special lines can only be created by the server, so they can be trusted. Clients and servers both exchange HTTP messages. Here's a minimal request from a client:

POST /rooms/roomname.txt HTTP/1.1\r\n
Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQK\r\n
Range: bytes=341-\r\n
Content-Length: <number here>\r\n
\r\n
This is my message in the request's body! May be empty if there's no new message, but may be present regardless.

Some commentaries on the client's request: the range is supposed to only have the lower boundary, the upper boundary must not be present.

And here's a minimal response from the server:

HTTP/1.1 206 Partial Content\r\n
\r\n
<messages in the user-specified range, with a footer for the sent message coming first, if there was a sent message>

Built-in privacy features (privacy from other members, the server is a trusted entity here):
* Room names can contain UUIDs making it practically impossible to have a third party enter a room
* People have to be granted access by the admin to use a node
* People can't write from an account of another user
